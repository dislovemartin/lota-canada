{
  "name": "Next.js React 19 TypeScript Development",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      "VARIANT": "20-bullseye"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",
        "bradlc.vscode-tailwindcss",
        "streetsidesoftware.code-spell-checker",
        "formulahendry.auto-rename-tag",
        "formulahendry.auto-close-tag",
        "christian-kohler.path-intellisense",
        "dsznajder.es7-react-js-snippets",
        "ms-azuretools.vscode-docker",
        "mikestead.dotenv",
        "eamodio.gitlens",
        "github.copilot",
        "github.copilot-chat",
        "ms-vscode-remote.remote-containers",
        "ms-vscode.js-debug",
        "ms-vscode.js-debug-companion",
        "ms-vscode.vscode-js-profile-flame",
        "ms-vscode.vscode-js-profile-table",
        "ms-vscode.vscode-typescript-tslint-plugin",
        "csstools.postcss",
        "ms-playwright.playwright",
        "cypress-io.cypress",
        "mcp.mcp-vscode-extension",
        "ms-vscode.live-server",
        "ritwickdey.liveserver",
        "auchenberg.vscode-browser-preview",
        "hediet.vscode-drawio",
        "humao.rest-client"
      ],
      "settings": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": true
        },
        "typescript.tsdk": "node_modules/typescript/lib",
        "typescript.enablePromptUseWorkspaceTsdk": true,
        "javascript.updateImportsOnFileMove.enabled": "always",
        "typescript.updateImportsOnFileMove.enabled": "always",
        "editor.tabSize": 2,
        "files.eol": "\n",
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash"
          }
        },
        "mcp.configPath": "/home/node/.mcp/config/mcp-config.json",
        "mcp.apiKey": "${localEnv:MCP_API_KEY}",
        "mcp.enableAutoCompletion": true,
        "mcp.enableInlineChat": true,
        "mcp.server.port": 3099,
        "mcp.server.maxMemory": 512,
        "mcp.cache.maxSize": 256,
        "mcp.logging.level": "info",
        "mcp.performance.optimization": true,
        "files.watcherExclude": {
          "**/.git/objects/**": true,
          "**/.git/subtree-cache/**": true,
          "**/node_modules/**": true,
          "**/.hg/store/**": true,
          "**/dist/**": true,
          "**/.next/**": true,
          "**/.mcp/cache/**": true,
          "**/.mcp/logs/**": true,
          "**/coverage/**": true,
          "**/.turbo/**": true
        }
      }
    }
  },
  "forwardPorts": [3000, 8080, 9000, 5500, 5501, 3099],
  "initializeCommand": "mkdir -p ${localEnv:HOME}/.mcp/{config,cache,logs}",
  "postCreateCommand": {
    "install-tools": "sudo .devcontainer/install-mcp-tools.sh",
    "install-deps": "cd ${containerWorkspaceFolder} && npm set cache-min 9999999 && npm config set registry https://registry.npmmirror.com && NODE_OPTIONS='--max-old-space-size=4096 --gc-global' npm install --prefer-offline --no-audit --no-fund --ignore-scripts --production=false --no-package-lock --verbose"
  },
  "postStartCommand": "cd ${containerWorkspaceFolder} && npm run dev",
  "remoteUser": "node",
  "features": {
    "ghcr.io/devcontainers/features/git:1": "os-provided",
    "ghcr.io/devcontainers/features/github-cli:1": "latest",
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20"
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "latest",
      "moby": true
    }
  },
  "mounts": ["type=volume,source=mcp-data,target=/home/node/.mcp"],
  "runArgs": [
    "--init",
    "--security-opt",
    "seccomp=unconfined",
    "--shm-size=8gb",
    "--memory=8g",
    "--memory-reservation=6g",
    "--memory-swap=16g",
    "--oom-score-adj=-1000",
    "--pids-limit=8192",
    "--cpu-shares=4096",
    "--cpu-quota=400000",
    "--ulimit",
    "nofile=131072:131072"
  ],
  "overrideCommand": false,
  "updateContentCommand": "cd ${containerWorkspaceFolder} && npm set cache-min 9999999 && npm config set registry https://registry.npmmirror.com && NODE_OPTIONS='--max-old-space-size=4096 --gc-global' npm install --prefer-offline --no-audit --no-fund --ignore-scripts --production=false --no-package-lock --verbose",
  "waitFor": "postCreateCommand",
  "hostRequirements": {
    "memory": "12gb",
    "storage": "32gb",
    "cpus": 4
  },
  "containerEnv": {
    "CHOKIDAR_USEPOLLING": "false",
    "WATCHPACK_POLLING": "false",
    "NODE_ENV": "development",
    "NODE_OPTIONS": "--max-old-space-size=4096 --gc-global --max-http-header-size=16384",
    "MALLOC_ARENA_MAX": "4",
    "NEXT_TELEMETRY_DISABLED": "1",
    "NEXT_SHARP_PATH": "/usr/local/lib/node_modules/sharp",
    "NPM_CONFIG_REGISTRY": "https://registry.npmmirror.com",
    "NPM_CONFIG_CACHE_MIN": "9999999",
    "UV_THREADPOOL_SIZE": "128",
    "PUPPETEER_SKIP_CHROMIUM_DOWNLOAD": "true",
    "CYPRESS_INSTALL_BINARY": "0"
  }
}
